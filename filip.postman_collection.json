{
	"info": {
		"_postman_id": "e2e01c39-2b93-41dd-b0c4-b787b47c1799",
		"name": "Filip Pravica interview task",
		"description": "# The interview task\n\n> You've been tasked with leading the test automation efforts for a new web application that is being developed by your company: \n  \n> 1\\. The application is an e-commerce platform that allows users to browse products, add them to their cart, and proceed to checkout.  \nor  \n2\\. pick up a application of your choice ,  \nor  \n3\\. if you can automate something with open API readily available over internet that’s a great choice \n  \n> Also if you can show me them automated with stubbed responses or open API response in a tool that’s a great step \n  \n> The application will be built using modern web technologies and frameworks (spring boot & vue.js) . \n  \n> Your team consists of both manual testers and developers skilled in test automation. Assume you just got the requirements, put down the clarification you have. \n  \n\n## **Filip's notice**\n\n_**This is the part where I have found an OpenAPI specification of some Ecommerce system. I have imported the spec and created a testing collection + mock server.**_\n\n_**Also, I did open a Shopify account to integrate with this Ecommerce API and to be able to showcase the test automation.**_\n\nFilip's test suit integration with CI/CD via Jenkins:\n\n``` bash\npipeline {\n  agent any\n  tools {nodejs \"{nodejs_configured_tool_name}\"}\n  stages {\n    stage('Install Postman CLI') {\n      steps {\n        sh 'curl -o- \"https://dl-cli.pstmn.io/install/linux64.sh\" | sh'\n      }\n    }\n    stage('Postman CLI Login') {\n      steps {\n        sh 'postman login --with-api-key $POSTMAN_API_KEY'\n      }\n    }\n    stage('Running collection') {\n      steps {\n        sh 'postman collection run \"4544976-e2e01c39-2b93-41dd-b0c4-b787b47c1799\"'\n      }\n    }\n  }\n}\n\n ```\n\n> $POSTMAN_API_KEY = PMAK-65eb495517f962000123723e-d9a1dd77bf00482ca5754853642177c61c \n  \n\n# Ecommerce API\n\nYou can use this API to access all Ecommerce API endpoints.\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\nWe also provide a [Mock API](https://developers.apideck.com/mock-api) that can be used for testing purposes: `https://mock-api.apideck.com`\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name | Type | Required | Description |\n| --- | --- | --- | --- |\n| x-apideck-consumer-id | String | Yes | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-service-id | String | No | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API. |\n| x-apideck-raw | Boolean | No | Include raw response. Mostly used for debugging purposes. |\n| x-apideck-app-id | String | Yes | The application id of your Unify application. Available at [https://app.apideck.com/unify/api-keys](https://app.apideck.com/unify/api-keys). |\n| Authorization | String | Yes | Bearer API KEY |\n\n## Authorization\n\nYou can interact with the API through the authorization methods below.\n\nReDoc-Inject:\n\nContact Support:  \nEmail: [hello@apideck.com](https://mailto:hello@apideck.com)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4544976"
	},
	"item": [
		{
			"name": "ecommerce",
			"item": [
				{
					"name": "orders",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"",
													"pm.test(\"Response Content-Type is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"",
													"pm.test(\"Customer Id should be non-empty string\", function () {",
													"    const responseData = pm.response.json().data; ",
													"    pm.expect(responseData.customer.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Customer Id should not be empty\");",
													"    ",
													"});",
													"",
													"",
													"pm.test(\"Order Id is correct\", function () {",
													"    const responseData = pm.response.json().data;",
													"    const reqOrderId = pm.request.url.path[2];",
													"    console.log(reqOrderId);",
													"    pm.expect(responseData.id).to.eq(reqOrderId);",
													"});",
													"   ",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "{{consumerId}}"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "{{appId}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "ORD-12345",
													"description": "(Required) ID of the record you are acting upon."
												}
											]
										},
										"description": "Get Order"
									},
									"response": [
										{
											"name": "Orders",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "{{consumerId}}"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "{{appId}}"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "",
														"disabled": true
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://unify.apideck.com/ecommerce/orders/:id",
													"protocol": "https",
													"host": [
														"unify",
														"apideck",
														"com"
													],
													"path": [
														"ecommerce",
														"orders",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ORD-12345"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\"status_code\": 200,\n  \"status\": \"OK\",\n  \"service\": \"shopify\",\n  \"resource\": \"products\",\n  \"operation\": \"one\",\n  \"data\": {\n    \"id\": \"ORD-12345\",\n    \"billing_address\": {\n      \"city\": \"Rijeka\",\n      \"company_name\": \"Luminum\",\n      \"country\": \"HR\",\n      \"line1\": \"Ulica Adresa 1\",\n      \"line2\": \"\",\n      \"postal_code\": \"51000\",\n      \"state\": \"PGZ\"\n    },\n    \"created_at\": \"2024-03-08\",\n    \"currency\": \"EUR\",\n    \"customer\": {\n      \"id\": \"cus21312321\",\n      \"company_name\": \"Ericsson Tesla\",\n      \"emails\": [\n        {\n          \"email\": \"et@mail.com\",\n          \"id\": \"et32323\",\n          \"type\": \"primary\"\n        }\n      ],\n      \"first_name\": \"Filip\",\n      \"last_name\": \"P.\",\n      \"name\": \"Filip P.\",\n      \"phone_numbers\": [\n        {\n          \"number\": \"7209876\",\n          \"area_code\": \"099\",\n          \"country_code\": \"385\",\n          \"extension\": \"\",\n          \"id\": \"54a43sf23\",\n          \"type\": \"office\"\n        }\n      ]\n    },\n    \"discounts\": [\n      {\n        \"amount\": \"<string>\",\n        \"code\": \"<string>\",\n        \"percentage\": \"<string>\"\n      },\n      {\n        \"amount\": \"<string>\",\n        \"code\": \"<string>\",\n        \"percentage\": \"<string>\"\n      }\n    ],\n    \"fulfillment_status\": \"cancelled\",\n    \"line_items\": [\n      {\n        \"name\": \"<string>\",\n        \"quantity\": \"<string>\",\n        \"total_amount\": \"<string>\",\n        \"description\": \"<string>\",\n        \"discounts\": [\n          {\n            \"amount\": \"<string>\",\n            \"code\": \"<string>\",\n            \"percentage\": \"<string>\"\n          },\n          {\n            \"amount\": \"<string>\",\n            \"code\": \"<string>\",\n            \"percentage\": \"<string>\"\n          }\n        ],\n        \"id\": \"<string>\",\n        \"options\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"product_id\": \"<string>\",\n        \"sku\": \"<string>\",\n        \"tax_amount\": \"<string>\",\n        \"tax_rate\": \"<string>\",\n        \"unit_price\": \"<string>\",\n        \"variant_id\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"quantity\": \"<string>\",\n        \"total_amount\": \"<string>\",\n        \"description\": \"<string>\",\n        \"discounts\": [\n          {\n            \"amount\": \"<string>\",\n            \"code\": \"<string>\",\n            \"percentage\": \"<string>\"\n          },\n          {\n            \"amount\": \"<string>\",\n            \"code\": \"<string>\",\n            \"percentage\": \"<string>\"\n          }\n        ],\n        \"id\": \"<string>\",\n        \"options\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"product_id\": \"<string>\",\n        \"sku\": \"<string>\",\n        \"tax_amount\": \"<string>\",\n        \"tax_rate\": \"<string>\",\n        \"unit_price\": \"<string>\",\n        \"variant_id\": \"<string>\"\n      }\n    ],\n    \"note\": \"<string>\",\n    \"order_number\": \"<string>\",\n    \"payment_method\": \"<string>\",\n    \"payment_status\": \"voided\",\n    \"shipping_address\": {\n      \"city\": \"<string>\",\n      \"company_name\": \"<string>\",\n      \"country\": \"<string>\",\n      \"line1\": \"<string>\",\n      \"line2\": \"<string>\",\n      \"postal_code\": \"<string>\",\n      \"state\": \"<string>\"\n    },\n    \"shipping_cost\": \"<string>\",\n    \"status\": \"unknown\",\n    \"sub_total\": \"<string>\",\n    \"total_amount\": \"<string>\",\n    \"total_discount\": \"<string>\",\n    \"total_tax\": \"<string>\",\n    \"tracking\": [\n      {\n        \"provider\": \"<string>\",\n        \"number\": \"<string>\",\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"provider\": \"<string>\",\n        \"number\": \"<string>\",\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/orders/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"orders",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/orders/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"orders",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "Payment Required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/orders/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"orders",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "The specified resource was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/orders/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"orders",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "Unprocessable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/orders/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"orders",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "Unexpected error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/orders/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"orders",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Response Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"//postman.setNextRequest(\"List Products\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ID of the consumer which you want to get or push data from",
										"key": "x-apideck-consumer-id",
										"value": "{{consumerId}}"
									},
									{
										"description": "(Required) The ID of your Unify application",
										"key": "x-apideck-app-id",
										"value": "{{appId}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ecommerce/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ecommerce",
										"orders"
									],
									"query": [
										{
											"key": "raw",
											"value": "false",
											"description": "Include raw response. Mostly used for debugging purposes",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
											"disabled": true
										},
										{
											"key": "filter[email]",
											"value": "<string>",
											"description": "Apply filters",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
											"disabled": true
										}
									]
								},
								"description": "List Orders"
							},
							"response": [
								{
									"name": "Orders",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "https://unify.apideck.com/ecommerce/orders?raw=false&cursor=<string>&limit=20&filter[email]=<string>&fields=<string>",
											"protocol": "https",
											"host": [
												"unify",
												"apideck",
												"com"
											],
											"path": [
												"ecommerce",
												"orders"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "filter[email]",
													"value": "<string>",
													"description": "Apply filters"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_code\": 200,\n  \"status\": \"OK\",\n  \"service\": \"shopify\",\n  \"resource\": \"products\",\n  \"operation\": \"one\",\n  \"data\": [\n    {\n      \"id\": \"order123\",\n      \"billing_address\": {\n        \"city\": \"Rijeka\",\n        \"company_name\": \"Ericsson Tesla\",\n        \"country\": \"HR\",\n        \"line1\": \"Vukovarska 13\",\n        \"line2\": \"\",\n        \"postal_code\": \"51000\",\n        \"state\": \"PGZ\"\n      },\n      \"created_at\": \"2024-03-08\",\n      \"currency\": \"EUR\",\n      \"customer\": {\n        \"id\": \"a213333\",\n        \"company_name\": \"Luminum\",\n        \"emails\": [\n          {\n            \"email\": \"filip@mail.com\",\n            \"id\": \"e323222\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"first_name\": \"Filip\",\n        \"last_name\": \"P.\",\n        \"name\": \"Filip P.\",\n        \"phone_numbers\": [\n          {\n            \"number\": \"1234567\",\n            \"area_code\": \"091\",\n            \"country_code\": \"385\",\n            \"extension\": \"\",\n            \"id\": \"2321321\",\n            \"type\": \"primary\"\n          }\n        ]\n      },\n      \"discounts\": [\n        {\n          \"amount\": \"<string>\",\n          \"code\": \"<string>\",\n          \"percentage\": \"<string>\"\n        },\n        {\n          \"amount\": \"<string>\",\n          \"code\": \"<string>\",\n          \"percentage\": \"<string>\"\n        }\n      ],\n      \"fulfillment_status\": \"cancelled\",\n      \"line_items\": [\n        {\n          \"name\": \"<string>\",\n          \"quantity\": \"<string>\",\n          \"total_amount\": \"<string>\",\n          \"description\": \"<string>\",\n          \"discounts\": [\n            {\n              \"amount\": \"<string>\",\n              \"code\": \"<string>\",\n              \"percentage\": \"<string>\"\n            },\n            {\n              \"amount\": \"<string>\",\n              \"code\": \"<string>\",\n              \"percentage\": \"<string>\"\n            }\n          ],\n          \"id\": \"<string>\",\n          \"options\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"product_id\": \"<string>\",\n          \"sku\": \"<string>\",\n          \"tax_amount\": \"<string>\",\n          \"tax_rate\": \"<string>\",\n          \"unit_price\": \"<string>\",\n          \"variant_id\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"quantity\": \"<string>\",\n          \"total_amount\": \"<string>\",\n          \"description\": \"<string>\",\n          \"discounts\": [\n            {\n              \"amount\": \"<string>\",\n              \"code\": \"<string>\",\n              \"percentage\": \"<string>\"\n            },\n            {\n              \"amount\": \"<string>\",\n              \"code\": \"<string>\",\n              \"percentage\": \"<string>\"\n            }\n          ],\n          \"id\": \"<string>\",\n          \"options\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"product_id\": \"<string>\",\n          \"sku\": \"<string>\",\n          \"tax_amount\": \"<string>\",\n          \"tax_rate\": \"<string>\",\n          \"unit_price\": \"<string>\",\n          \"variant_id\": \"<string>\"\n        }\n      ],\n      \"note\": \"<string>\",\n      \"order_number\": \"<string>\",\n      \"payment_method\": \"<string>\",\n      \"payment_status\": \"unknown\",\n      \"shipping_address\": {\n        \"city\": \"<string>\",\n        \"company_name\": \"<string>\",\n        \"country\": \"<string>\",\n        \"line1\": \"<string>\",\n        \"line2\": \"<string>\",\n        \"postal_code\": \"<string>\",\n        \"state\": \"<string>\"\n      },\n      \"shipping_cost\": \"<string>\",\n      \"status\": \"cancelled\",\n      \"sub_total\": \"<string>\",\n      \"total_amount\": \"<string>\",\n      \"total_discount\": \"<string>\",\n      \"total_tax\": \"<string>\",\n      \"tracking\": [\n        {\n          \"provider\": \"<string>\",\n          \"number\": \"<string>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"provider\": \"<string>\",\n          \"number\": \"<string>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"billing_address\": {\n        \"city\": \"<string>\",\n        \"company_name\": \"<string>\",\n        \"country\": \"<string>\",\n        \"line1\": \"<string>\",\n        \"line2\": \"<string>\",\n        \"postal_code\": \"<string>\",\n        \"state\": \"<string>\"\n      },\n      \"created_at\": \"<dateTime>\",\n      \"currency\": \"NPR\",\n      \"customer\": {\n        \"id\": \"<string>\",\n        \"company_name\": \"<string>\",\n        \"emails\": [\n          {\n            \"email\": \"<email>\",\n            \"id\": \"<string>\",\n            \"type\": \"work\"\n          },\n          {\n            \"email\": \"<email>\",\n            \"id\": \"<string>\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"phone_numbers\": [\n          {\n            \"number\": \"<string>\",\n            \"area_code\": \"<string>\",\n            \"country_code\": \"<string>\",\n            \"extension\": \"<string>\",\n            \"id\": \"<string>\",\n            \"type\": \"office\"\n          },\n          {\n            \"number\": \"<string>\",\n            \"area_code\": \"<string>\",\n            \"country_code\": \"<string>\",\n            \"extension\": \"<string>\",\n            \"id\": \"<string>\",\n            \"type\": \"primary\"\n          }\n        ]\n      },\n      \"discounts\": [\n        {\n          \"amount\": \"<string>\",\n          \"code\": \"<string>\",\n          \"percentage\": \"<string>\"\n        },\n        {\n          \"amount\": \"<string>\",\n          \"code\": \"<string>\",\n          \"percentage\": \"<string>\"\n        }\n      ],\n      \"fulfillment_status\": \"shipped\",\n      \"line_items\": [\n        {\n          \"name\": \"<string>\",\n          \"quantity\": \"<string>\",\n          \"total_amount\": \"<string>\",\n          \"description\": \"<string>\",\n          \"discounts\": [\n            {\n              \"amount\": \"<string>\",\n              \"code\": \"<string>\",\n              \"percentage\": \"<string>\"\n            },\n            {\n              \"amount\": \"<string>\",\n              \"code\": \"<string>\",\n              \"percentage\": \"<string>\"\n            }\n          ],\n          \"id\": \"<string>\",\n          \"options\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"product_id\": \"<string>\",\n          \"sku\": \"<string>\",\n          \"tax_amount\": \"<string>\",\n          \"tax_rate\": \"<string>\",\n          \"unit_price\": \"<string>\",\n          \"variant_id\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"quantity\": \"<string>\",\n          \"total_amount\": \"<string>\",\n          \"description\": \"<string>\",\n          \"discounts\": [\n            {\n              \"amount\": \"<string>\",\n              \"code\": \"<string>\",\n              \"percentage\": \"<string>\"\n            },\n            {\n              \"amount\": \"<string>\",\n              \"code\": \"<string>\",\n              \"percentage\": \"<string>\"\n            }\n          ],\n          \"id\": \"<string>\",\n          \"options\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"product_id\": \"<string>\",\n          \"sku\": \"<string>\",\n          \"tax_amount\": \"<string>\",\n          \"tax_rate\": \"<string>\",\n          \"unit_price\": \"<string>\",\n          \"variant_id\": \"<string>\"\n        }\n      ],\n      \"note\": \"<string>\",\n      \"order_number\": \"<string>\",\n      \"payment_method\": \"<string>\",\n      \"payment_status\": \"paid\",\n      \"shipping_address\": {\n        \"city\": \"<string>\",\n        \"company_name\": \"<string>\",\n        \"country\": \"<string>\",\n        \"line1\": \"<string>\",\n        \"line2\": \"<string>\",\n        \"postal_code\": \"<string>\",\n        \"state\": \"<string>\"\n      },\n      \"shipping_cost\": \"<string>\",\n      \"status\": \"active\",\n      \"sub_total\": \"<string>\",\n      \"total_amount\": \"<string>\",\n      \"total_discount\": \"<string>\",\n      \"total_tax\": \"<string>\",\n      \"tracking\": [\n        {\n          \"provider\": \"<string>\",\n          \"number\": \"<string>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"provider\": \"<string>\",\n          \"number\": \"<string>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"<string>\",\n    \"next\": \"<string>\",\n    \"previous\": \"<string>\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"<string>\",\n      \"next\": \"<string>\",\n      \"previous\": \"<string>\"\n    },\n    \"items_on_page\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/orders?raw=false&cursor=<string>&limit=20&filter[email]=<string>&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"orders"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "filter[email]",
													"value": "<string>",
													"description": "Apply filters"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/orders?raw=false&cursor=<string>&limit=20&filter[email]=<string>&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"orders"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "filter[email]",
													"value": "<string>",
													"description": "Apply filters"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "Payment Required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/orders?raw=false&cursor=<string>&limit=20&filter[email]=<string>&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"orders"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "filter[email]",
													"value": "<string>",
													"description": "Apply filters"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/orders?raw=false&cursor=<string>&limit=20&filter[email]=<string>&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"orders"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "filter[email]",
													"value": "<string>",
													"description": "Apply filters"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "Unprocessable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/orders?raw=false&cursor=<string>&limit=20&filter[email]=<string>&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"orders"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "filter[email]",
													"value": "<string>",
													"description": "Apply filters"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/orders?raw=false&cursor=<string>&limit=20&filter[email]=<string>&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"orders"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "filter[email]",
													"value": "<string>",
													"description": "Apply filters"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "products",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseData = pm.response.json().data;",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"",
													"pm.test(\"Response Content-Type is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"",
													"pm.test(\"Name and description should be non-empty strings\", function () {",
													"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
													"    pm.expect(responseData.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");",
													"});",
													"",
													"pm.test(\"Product id should be equal to request param\", function() {",
													"    const reqParamId = pm.request.url.path[2];",
													"    pm.expect(responseData.id).to.be.eql(reqParamId);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const productA = pm.collectionVariables.get(\"productIdA\");",
													"const productB = pm.collectionVariables.get(\"productIdB\");",
													"const productC = pm.collectionVariables.get(\"productIdC\");",
													"",
													"//pm.variables.set(\"itemId\", productA);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "{{consumerId}}"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "{{appId}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{itemId}}",
													"description": "(Required) ID of the record you are acting upon."
												}
											]
										},
										"description": "Get Product"
									},
									"response": [
										{
											"name": "Product A",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "{{consumerId}}"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "{{appId}}"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://unify.apideck.com/ecommerce/products/:id",
													"protocol": "https",
													"host": [
														"unify",
														"apideck",
														"com"
													],
													"path": [
														"ecommerce",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "9088728596807"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"status_code\": 200,\n    \"status\": \"OK\",\n    \"service\": \"filip mock\",\n    \"resource\": \"products\",\n    \"operation\": \"one\",\n    \"data\": {\n        \"id\": \"9088728596807\",\n        \"name\": \"Letter A\",\n        \"description\": \"Unique letter from the latin alphabet.\",\n        \"variants\": [\n            {\n                \"id\": \"49184882262343\",\n                \"name\": \"Default Title\",\n                \"price\": \"1.00\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"1000\",\n                \"weight\": \"0\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818108387655\",\n                        \"name\": \"Title\",\n                        \"value\": \"Default Title\"\n                    }\n                ]\n            }\n        ],\n        \"options\": [\n            {\n                \"id\": \"11818108387655\",\n                \"name\": \"Title\",\n                \"values\": [\n                    \"Default Title\"\n                ]\n            }\n        ],\n        \"tags\": []\n    }\n}"
										},
										{
											"name": "Product B",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "{{consumerId}}"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "{{appId}}"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://unify.apideck.com/ecommerce/products/:id",
													"protocol": "https",
													"host": [
														"unify",
														"apideck",
														"com"
													],
													"path": [
														"ecommerce",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "9088730825031"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"status_code\": 200,\n    \"status\": \"OK\",\n    \"service\": \"filip mock\",\n    \"resource\": \"products\",\n    \"operation\": \"one\",\n    \"data\": {\n        \"id\": \"9088730825031\",\n        \"name\": \"Letter B\",\n        \"description\": \"A beautiful latin letter B.\",\n        \"variants\": [\n            {\n                \"id\": \"49184887832903\",\n                \"name\": \"Default Title\",\n                \"price\": \"1.10\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"0\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818111172935\",\n                        \"name\": \"Title\",\n                        \"value\": \"Default Title\"\n                    }\n                ]\n            }\n        ],\n        \"options\": [\n            {\n                \"id\": \"11818111172935\",\n                \"name\": \"Title\",\n                \"values\": [\n                    \"Default Title\"\n                ]\n            }\n        ],\n        \"tags\": []\n    }\n}"
										},
										{
											"name": "Product C",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "{{consumerId}}"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "{{appId}}"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://unify.apideck.com/ecommerce/products/:id",
													"protocol": "https",
													"host": [
														"unify",
														"apideck",
														"com"
													],
													"path": [
														"ecommerce",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "9088766181703"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"status_code\": 200,\n    \"status\": \"OK\",\n    \"service\": \"filip mock\",\n    \"resource\": \"products\",\n    \"operation\": \"one\",\n    \"data\": {\n        \"id\": \"9088766181703\",\n        \"name\": \"Letter C\",\n        \"description\": \"The exclusive 3D letter C made out of wood.\",\n        \"variants\": [\n            {\n                \"id\": \"49184950124871\",\n                \"name\": \"Medium / Red\",\n                \"price\": \"1.20\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"1\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818153804103\",\n                        \"name\": \"Size\",\n                        \"value\": \"Medium\"\n                    },\n                    {\n                        \"id\": \"11818153836871\",\n                        \"name\": \"Color\",\n                        \"value\": \"Red\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"49184950157639\",\n                \"name\": \"Medium / Green\",\n                \"price\": \"1.20\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"1\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818153804103\",\n                        \"name\": \"Size\",\n                        \"value\": \"Medium\"\n                    },\n                    {\n                        \"id\": \"11818153836871\",\n                        \"name\": \"Color\",\n                        \"value\": \"Green\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"49184950190407\",\n                \"name\": \"Medium / Blue\",\n                \"price\": \"1.20\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"1\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818153804103\",\n                        \"name\": \"Size\",\n                        \"value\": \"Medium\"\n                    },\n                    {\n                        \"id\": \"11818153836871\",\n                        \"name\": \"Color\",\n                        \"value\": \"Blue\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"49184950223175\",\n                \"name\": \"Large / Red\",\n                \"price\": \"1.20\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"1\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818153804103\",\n                        \"name\": \"Size\",\n                        \"value\": \"Large\"\n                    },\n                    {\n                        \"id\": \"11818153836871\",\n                        \"name\": \"Color\",\n                        \"value\": \"Red\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"49184950255943\",\n                \"name\": \"Large / Green\",\n                \"price\": \"1.20\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"1\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818153804103\",\n                        \"name\": \"Size\",\n                        \"value\": \"Large\"\n                    },\n                    {\n                        \"id\": \"11818153836871\",\n                        \"name\": \"Color\",\n                        \"value\": \"Green\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"49184950288711\",\n                \"name\": \"Large / Blue\",\n                \"price\": \"1.20\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"1\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818153804103\",\n                        \"name\": \"Size\",\n                        \"value\": \"Large\"\n                    },\n                    {\n                        \"id\": \"11818153836871\",\n                        \"name\": \"Color\",\n                        \"value\": \"Blue\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"49184950321479\",\n                \"name\": \"Small / Red\",\n                \"price\": \"1.20\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"1\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818153804103\",\n                        \"name\": \"Size\",\n                        \"value\": \"Small\"\n                    },\n                    {\n                        \"id\": \"11818153836871\",\n                        \"name\": \"Color\",\n                        \"value\": \"Red\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"49184950354247\",\n                \"name\": \"Small / Green\",\n                \"price\": \"1.20\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"1\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818153804103\",\n                        \"name\": \"Size\",\n                        \"value\": \"Small\"\n                    },\n                    {\n                        \"id\": \"11818153836871\",\n                        \"name\": \"Color\",\n                        \"value\": \"Green\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"49184950387015\",\n                \"name\": \"Small / Blue\",\n                \"price\": \"1.20\",\n                \"sku\": \"\",\n                \"inventory_quantity\": \"0\",\n                \"weight\": \"1\",\n                \"weight_unit\": \"kg\",\n                \"options\": [\n                    {\n                        \"id\": \"11818153804103\",\n                        \"name\": \"Size\",\n                        \"value\": \"Small\"\n                    },\n                    {\n                        \"id\": \"11818153836871\",\n                        \"name\": \"Color\",\n                        \"value\": \"Blue\"\n                    }\n                ]\n            }\n        ],\n        \"options\": [\n            {\n                \"id\": \"11818153804103\",\n                \"name\": \"Size\",\n                \"values\": [\n                    \"Medium\",\n                    \"Large\",\n                    \"Small\"\n                ]\n            },\n            {\n                \"id\": \"11818153836871\",\n                \"name\": \"Color\",\n                \"values\": [\n                    \"Red\",\n                    \"Green\",\n                    \"Blue\"\n                ]\n            }\n        ],\n        \"tags\": []\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/products/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"products",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/products/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"products",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "Payment Required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/products/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"products",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "The specified resource was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/products/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"products",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "Unprocessable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/products/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"products",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										},
										{
											"name": "Unexpected error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ID of the consumer which you want to get or push data from",
														"key": "x-apideck-consumer-id",
														"value": "<string>"
													},
													{
														"description": "(Required) The ID of your Unify application",
														"key": "x-apideck-app-id",
														"value": "<string>"
													},
													{
														"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
														"key": "x-apideck-service-id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ecommerce/products/:id?raw=false&fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ecommerce",
														"products",
														":id"
													],
													"query": [
														{
															"key": "raw",
															"value": "false",
															"description": "Include raw response. Mostly used for debugging purposes"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Products",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const results = JSON.parse(pm.collectionVariables.get(\"results\"));",
											"const products = [];",
											"",
											"const response = pm.response.json();",
											"",
											"pm.test(\"Every item has an id\", () => {",
											"    response.data.forEach(element => {",
											"        pm.expect(element).to.have.property('id');",
											"        products.push(element.id);",
											"    });",
											"    pm.collectionVariables.set(\"products\", JSON.stringify(products));",
											"});",
											"",
											"//postman.setNextRequest(\"Get Product\")",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ID of the consumer which you want to get or push data from",
										"key": "x-apideck-consumer-id",
										"value": "{{consumerId}}"
									},
									{
										"description": "(Required) The ID of your Unify application",
										"key": "x-apideck-app-id",
										"value": "{{appId}}"
									},
									{
										"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
										"key": "x-apideck-service-id",
										"value": "<string>",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ecommerce/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ecommerce",
										"products"
									],
									"query": [
										{
											"key": "raw",
											"value": "false",
											"description": "Include raw response. Mostly used for debugging purposes",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
											"disabled": true
										}
									]
								},
								"description": "List Products"
							},
							"response": [
								{
									"name": "Products",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "https://unify.apideck.com/ecommerce/products",
											"protocol": "https",
											"host": [
												"unify",
												"apideck",
												"com"
											],
											"path": [
												"ecommerce",
												"products"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"status_code\": 200,\n    \"status\": \"OK\",\n    \"service\": \"shopify\",\n    \"resource\": \"products\",\n    \"operation\": \"all\",\n    \"data\": [\n        {\n            \"id\": \"9088728596807\",\n            \"name\": \"Letter AA\",\n            \"description\": \"Unique letter from the latin alphabet.\",\n            \"variants\": [\n                {\n                    \"id\": \"49184882262343\",\n                    \"name\": \"Default Title\",\n                    \"price\": \"1.00\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"1000\",\n                    \"weight\": \"0\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818108387655\",\n                            \"name\": \"Title\",\n                            \"value\": \"Default Title\"\n                        }\n                    ]\n                }\n            ],\n            \"options\": [\n                {\n                    \"id\": \"11818108387655\",\n                    \"name\": \"Title\",\n                    \"values\": [\n                        \"Default Title\"\n                    ]\n                }\n            ],\n            \"tags\": []\n        },\n        {\n            \"id\": \"9088730825031\",\n            \"name\": \"Letter BB\",\n            \"description\": \"A beautiful latin letter B.\",\n            \"variants\": [\n                {\n                    \"id\": \"49184887832903\",\n                    \"name\": \"Default Title\",\n                    \"price\": \"1.10\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"0\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818111172935\",\n                            \"name\": \"Title\",\n                            \"value\": \"Default Title\"\n                        }\n                    ]\n                }\n            ],\n            \"options\": [\n                {\n                    \"id\": \"11818111172935\",\n                    \"name\": \"Title\",\n                    \"values\": [\n                        \"Default Title\"\n                    ]\n                }\n            ],\n            \"tags\": []\n        },\n        {\n            \"id\": \"9088766181703\",\n            \"name\": \"Letter CC\",\n            \"description\": \"The exclusive 3D letter C made out of wood.\",\n            \"variants\": [\n                {\n                    \"id\": \"49184950124871\",\n                    \"name\": \"Medium / Red\",\n                    \"price\": \"1.20\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"1\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818153804103\",\n                            \"name\": \"Size\",\n                            \"value\": \"Medium\"\n                        },\n                        {\n                            \"id\": \"11818153836871\",\n                            \"name\": \"Color\",\n                            \"value\": \"Red\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"49184950157639\",\n                    \"name\": \"Medium / Green\",\n                    \"price\": \"1.20\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"1\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818153804103\",\n                            \"name\": \"Size\",\n                            \"value\": \"Medium\"\n                        },\n                        {\n                            \"id\": \"11818153836871\",\n                            \"name\": \"Color\",\n                            \"value\": \"Green\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"49184950190407\",\n                    \"name\": \"Medium / Blue\",\n                    \"price\": \"1.20\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"1\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818153804103\",\n                            \"name\": \"Size\",\n                            \"value\": \"Medium\"\n                        },\n                        {\n                            \"id\": \"11818153836871\",\n                            \"name\": \"Color\",\n                            \"value\": \"Blue\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"49184950223175\",\n                    \"name\": \"Large / Red\",\n                    \"price\": \"1.20\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"1\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818153804103\",\n                            \"name\": \"Size\",\n                            \"value\": \"Large\"\n                        },\n                        {\n                            \"id\": \"11818153836871\",\n                            \"name\": \"Color\",\n                            \"value\": \"Red\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"49184950255943\",\n                    \"name\": \"Large / Green\",\n                    \"price\": \"1.20\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"1\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818153804103\",\n                            \"name\": \"Size\",\n                            \"value\": \"Large\"\n                        },\n                        {\n                            \"id\": \"11818153836871\",\n                            \"name\": \"Color\",\n                            \"value\": \"Green\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"49184950288711\",\n                    \"name\": \"Large / Blue\",\n                    \"price\": \"1.20\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"1\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818153804103\",\n                            \"name\": \"Size\",\n                            \"value\": \"Large\"\n                        },\n                        {\n                            \"id\": \"11818153836871\",\n                            \"name\": \"Color\",\n                            \"value\": \"Blue\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"49184950321479\",\n                    \"name\": \"Small / Red\",\n                    \"price\": \"1.20\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"1\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818153804103\",\n                            \"name\": \"Size\",\n                            \"value\": \"Small\"\n                        },\n                        {\n                            \"id\": \"11818153836871\",\n                            \"name\": \"Color\",\n                            \"value\": \"Red\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"49184950354247\",\n                    \"name\": \"Small / Green\",\n                    \"price\": \"1.20\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"1\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818153804103\",\n                            \"name\": \"Size\",\n                            \"value\": \"Small\"\n                        },\n                        {\n                            \"id\": \"11818153836871\",\n                            \"name\": \"Color\",\n                            \"value\": \"Green\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"49184950387015\",\n                    \"name\": \"Small / Blue\",\n                    \"price\": \"1.20\",\n                    \"sku\": \"\",\n                    \"inventory_quantity\": \"0\",\n                    \"weight\": \"1\",\n                    \"weight_unit\": \"kg\",\n                    \"options\": [\n                        {\n                            \"id\": \"11818153804103\",\n                            \"name\": \"Size\",\n                            \"value\": \"Small\"\n                        },\n                        {\n                            \"id\": \"11818153836871\",\n                            \"name\": \"Color\",\n                            \"value\": \"Blue\"\n                        }\n                    ]\n                }\n            ],\n            \"options\": [\n                {\n                    \"id\": \"11818153804103\",\n                    \"name\": \"Size\",\n                    \"values\": [\n                        \"Medium\",\n                        \"Large\",\n                        \"Small\"\n                    ]\n                },\n                {\n                    \"id\": \"11818153836871\",\n                    \"name\": \"Color\",\n                    \"values\": [\n                        \"Red\",\n                        \"Green\",\n                        \"Blue\"\n                    ]\n                }\n            ],\n            \"tags\": []\n        }\n    ],\n    \"meta\": {\n        \"cursors\": {\n            \"previous\": null,\n            \"current\": null,\n            \"next\": null\n        },\n        \"items_on_page\": 3\n    },\n    \"links\": {\n        \"previous\": null,\n        \"current\": \"https://unify.apideck.com/ecommerce/products\",\n        \"next\": null\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/products?raw=false&cursor=<string>&limit=20&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"products"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/products?raw=false&cursor=<string>&limit=20&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"products"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "Payment Required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/products?raw=false&cursor=<string>&limit=20&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"products"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/products?raw=false&cursor=<string>&limit=20&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"products"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "Unprocessable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/products?raw=false&cursor=<string>&limit=20&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"products"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ID of the consumer which you want to get or push data from",
												"key": "x-apideck-consumer-id",
												"value": "<string>"
											},
											{
												"description": "(Required) The ID of your Unify application",
												"key": "x-apideck-app-id",
												"value": "<string>"
											},
											{
												"description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
												"key": "x-apideck-service-id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ecommerce/products?raw=false&cursor=<string>&limit=20&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ecommerce",
												"products"
											],
											"query": [
												{
													"key": "raw",
													"value": "false",
													"description": "Include raw response. Mostly used for debugging purposes"
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"ref\": \"<string>\",\n  \"status_code\": \"<number>\",\n  \"type_name\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{apiKey}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://16aab6de-01de-4143-a881-07846e94c726.mock.pstmn.io"
		},
		{
			"key": "apiKey",
			"value": "sk_live_48420730-ede9-4033-bd3d-73a3fd22ac1b-mnUNuUKtwMJWHUU6jtq-623a4048-5407-4c25-b514-4d78e8369af1",
			"type": "string"
		},
		{
			"key": "appId",
			"value": "Bfz6CrzGBGLhAZnOjtpWWaglfbbck04K2jtp",
			"type": "string"
		},
		{
			"key": "consumerId",
			"value": "4KVxrTbMHCm1QMH",
			"type": "string"
		},
		{
			"key": "productIdA",
			"value": "9088728596807",
			"type": "string"
		},
		{
			"key": "productIdB",
			"value": "9088730825031",
			"type": "string"
		},
		{
			"key": "productIdC",
			"value": "9088766181703",
			"type": "string"
		},
		{
			"key": "orderIdA",
			"value": "123",
			"type": "string"
		},
		{
			"key": "products",
			"value": "[]",
			"type": "string"
		},
		{
			"key": "results",
			"value": "[]",
			"type": "string"
		},
		{
			"key": "POSTMAN_API_KEY",
			"value": "PMAK-65eb495517f962000123723e-d9a1dd77bf00482ca5754853642177c61c",
			"type": "string"
		},
		{
			"key": "itemId",
			"value": "9088728596807",
			"type": "string"
		}
	]
}